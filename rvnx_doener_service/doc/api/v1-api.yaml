openapi: 3.0.3
info:
  title: rvnx Döner Service
  description: Backend for rvnx Döner Map
  version: v1
servers:
  - url: 'https://doener.rvnx.community/api/v1'

components:
  parameters:
    BoundingBoxLatMinParameter:
      name: ltm
      description: Bounding box minimum latitude
      in: query
      required: true
      schema:
        type: number
        example: "52.76737241459772"
    BoundingBoxLngMinParameter:
      name: lnm
      description: Bounding box minimum longitude
      in: query
      required: true
      schema:
        type: number
        example: "12.92496607430404"
    BoundingBoxLatMaxParameter:
      name: ltx
      description: Bounding box maximum latitude
      in: query
      required: true
      schema:
        type: number
        example: "52.192621247325337"
    BoundingBoxLngMaxParameter:
      name: lnx
      description: Bounding box maximum longitude
      in: query
      required: true
      schema:
        type: number
        example: "13.98832629230400"
    ClusterThresholdParameter:
      name: ct
      description: Allows to specify the number of kebab shops before the server starts clustering
      in: query
      required: false
      schema:
        type: number
        minimum: 1
        default: 100
        maximum: 1000
    ClusterCountParameter:
      name: cc
      description: Allows to specify how fine the server should cluster the results
      in: query
      required: false
      schema:
        type: number
        minimum: 1
        default: 25
        maximum: 50
    KebabShopIDPathParameter:
      name: shop_id
      description: Allows to specify kebab shop id
      in: path
      required: true
      schema:
        type: number

  schemas:
    PriceEntry:
      type: object
      properties:
        price:
          type: number
          minimum: 0
        currency:
          type: string
          enum:
            - EUR
            - CHF
            - JPY
            - SEK
            - DDK
            - USD
            - GBP
    ShopRatingPayload:
      type: object
      properties:
        rating:
          type: object
          properties:
            prices:
              type: object
              properties:
                normalKebab:
                  $ref: '#/components/schemas/PriceEntry'
                vegiKebab:
                  $ref: '#/components/schemas/PriceEntry'
            userScore:
              type: number
              minimum: 0
              maximum: 5
            opinion:
              type: string
            anonymous:
              type: boolean
    KebabShop:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lat:
          type: number
        lng:
          type: number
        rating:
          type: object
          properties:
            score:
              type: number
              minimum: 0
              maximum: 5
              nullable: true
            prices:
              type: array
              items:
                $ref: '#/components/schemas/PriceEntry'
            reviews:
              type: array
              items:
                type: object
                properties:
                  created:
                    type: string
                  review:
                    type: string

paths:
  /kebabshops/box:
    get:
      tags:
        - kebabshops
      description: "Request all kebab shops in the given bounding box"
      parameters:
        - $ref: "#/components/parameters/BoundingBoxLatMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLatMaxParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMaxParameter"
      responses:
        200:
          description: Array of basic shop information points
          content:
            application/json:
              schema:
                type: object
                properties:
                  cords:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        lat:
                          type: number
                        lng:
                          type: number
  /kebabshops/clusters:
    get:
      tags:
        - kebabshops
      description: "Request all kebab shops in the given bounding box in clusters"
      parameters:
        - $ref: "#/components/parameters/BoundingBoxLatMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLatMaxParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMaxParameter"
        - $ref: "#/components/parameters/ClusterCountParameter"
      responses:
        200:
          description: Array of shop cluster
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        bounds:
                          type: object
                          properties:
                            min_lat:
                              type: number
                            min_lng:
                              type: number
                            max_lat:
                              type: number
                            max_lng:
                              type: number
                        lat:
                          type: number
                        lng:
                          type: number
                        norm:
                          description: A number describing the relative size of this cluster
                          minimum: 0
                          maximum: 1
                          type: number
                        shops:
                          description: Number of shops in this cluster
                          type: number
  /kebabshops/auto:
    get:
      tags:
        - kebabshops
      description: "Request all kebab shops in the given bounding box and let the server decide to apply clustering"
      parameters:
        - $ref: "#/components/parameters/BoundingBoxLatMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLatMaxParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMinParameter"
        - $ref: "#/components/parameters/BoundingBoxLngMaxParameter"
        - $ref: "#/components/parameters/ClusterCountParameter"
        - $ref: "#/components/parameters/ClusterThresholdParameter"
      responses:
        200:
          description: Array of shop cluster
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      clusters:
                        type: array
                        items:
                          type: object
                          properties:
                            lat:
                              type: number
                            lng:
                              type: number
                            norm:
                              description: A number describing the relative size of this cluster
                              minimum: 0
                              maximum: 1
                              type: number
                            shops:
                              description: Number of shops in this cluster
                              type: number
                  - type: object
                    properties:
                      cords:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            lat:
                              type: number
                            lng:
                              type: number
  /kebabshops/:shop_id:
    get:
      tags:
        - kebabshops
      description: "Request a specific kebab shop"
      parameters:
        - $ref: "#/components/parameters/KebabShopIDPathParameter"
      responses:
        404:
          description: Requested kebab shop does not exist
        200:
          description: Returns information about the requested kebab shop
          content:
            application/json:
              schema:
                type: object
                properties:
                  shop:
                    $ref: '#/components/schemas/KebabShop'
  /kebabshops/:shop_id/rate:
    post:
      tags:
        - kebabshops
      description: "Allows an authenticated user to rate a shop"
      parameters:
        - $ref: "#/components/parameters/KebabShopIDPathParameter"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  $ref: '#/components/schemas/ShopRatingPayload'

      responses:
        404:
          description: Requested kebab shop does not exist
        200:
          description: Rating was successful
